# Telegraf Configuration for Home Automation Infrastructure
# Version: 1.33+ with deprecations fixed

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  hostname = "ha-server2"
  omit_hostname = false
  # Future-proof option
  skip_processors_after_aggregators = false

# InfluxDB v2 Output
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${INFLUXDB_TOKEN}"
  organization = "${INFLUXDB_ORG}"
  bucket = "${INFLUXDB_BUCKET}"

# -------------------
# System Metrics
# -------------------

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Disk I/O â€” limit to real devices to avoid loop/udev warnings
[[inputs.diskio]]
  devices = ["nvme0n1"]   # adjust if you have other real disks

[[inputs.kernel]]
[[inputs.mem]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

# Network (no deprecated options)
[[inputs.net]]
  interfaces = ["eth*", "en*"]

# Use nstat for protocol stats (replaces ignore_protocol_stats)
[[inputs.nstat]]
  proc_net_netstat = "/host/proc/net/netstat"
  proc_net_snmp   = "/host/proc/net/snmp"
  proc_net_snmp6  = "/host/proc/net/snmp6"
  dump_zeros = true

[[inputs.netstat]]

# -------------------
# Docker Metrics
# -------------------
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice_include = ["cpu", "blkio", "network"]   # âœ… replacement for perdevice
  total = false
  docker_label_include = []
  docker_label_exclude = []

# -------------------
# PostgreSQL Metrics
# -------------------
[[inputs.postgresql]]
  address = "postgres://hass:${POSTGRES_PASSWORD}@postgres:5432/homeassistant?sslmode=disable"
  databases = ["homeassistant"]

# -------------------
# MQTT Broker Metrics
# -------------------
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  username = "telegraf"   # ðŸ‘ˆ make sure this user exists in mosquitto
  password = "${MQTT_PASSWORD}"
  topics = [
    "$SYS/broker/load/+",
    "$SYS/broker/clients/+",
    "$SYS/broker/messages/+",
    "$SYS/broker/subscriptions/+"
  ]
  data_format = "value"
  data_type = "float"

# -------------------
# Home Assistant API Metrics
# -------------------
[[inputs.http]]
  name_override = "homeassistant"
  urls = ["http://homeassistant:8123/api/states"]
  headers = {"Authorization" = "Bearer ${HA_TOKEN}"}
  data_format = "json"
  json_query = "length"
  timeout = "10s"
  interval = "60s"

# -------------------
# Pi-hole v6 Metrics (exec script)
# -------------------
[[inputs.exec]]
  commands = ["/etc/telegraf/piholeStats.sh"]
  timeout = "60s"
  data_format = "influx"
  interval = "60s"

# -------------------
# SSL Certificate Monitoring
# -------------------
[[inputs.x509_cert]]
  sources = [
    "https://ha.martin-ohana.com:443",
    "https://nodered.martin-ohana.com:443",
    "https://zwavejs.martin-ohana.com:443",
    "https://portainer.martin-ohana.com:443",
    "https://pgadmin.martin-ohana.com:443",
    "https://grafana.martin-ohana.com:443",
    "https://influxdb.martin-ohana.com:443"
  ]
  timeout = "10s"

# -------------------
# Remote Server Health Checks
# -------------------
[[inputs.exec]]
  commands = [
    "ssh raspberrypi 'echo \"remote_health,server=raspberrypi,host=192.168.1.65 status=1\"'",
    "ssh tartlet 'echo \"remote_health,server=tartlet,host=192.168.30.25 status=1\"'"
  ]
  timeout = "30s"
  data_format = "influx"
  interval = "300s"

# -------------------
# Network Connectivity Tests
# -------------------
[[inputs.ping]]
  urls = ["192.168.1.1", "192.168.1.65", "192.168.30.25", "8.8.8.8"]
  count = 3
  timeout = 1.0
  deadline = 10

