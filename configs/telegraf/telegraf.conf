# Telegraf Configuration for Home Automation Infrastructure Monitoring

[global_tags]
  environment = "homelab"
  location = "home"
  server = "ha-server2"

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  hostname = "ha-server2"
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                  #
###############################################################################

[[outputs.influxdb_v2]]
  urls = ["${INFLUXDB_URL}"]
  token = "${INFLUXDB_TOKEN}"
  organization = "${INFLUXDB_ORG}"
  bucket = "${INFLUXDB_BUCKET}"

###############################################################################
#                            INPUT PLUGINS                                   #
###############################################################################

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.mem]]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.system]]
  fieldexclude = ["uptime_format"]

[[inputs.net]]
  interfaces = ["eth*", "wlan*", "enp*", "ens*"]

[[inputs.processes]]

[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  timeout = "5s"
  perdevice_include = ["cpu", "blkio", "network"]
  total = false

[[inputs.ping]]
  urls = ["192.168.1.1", "192.168.1.65", "192.168.30.25", "8.8.8.8"]
  count = 3
  timeout = 5.0
  interval = "60s"

# Home Assistant Health Check
[[inputs.http]]
  name_override = "homeassistant_health"
  urls = ["http://homeassistant:8123/api/"]
  method = "GET"
  timeout = "10s"
  data_format = "json"
  json_query = "message"
  tagexclude = ["url"]
  headers = {"Authorization" = "Bearer ${HA_TOKEN}", "Content-Type" = "application/json"}
  [inputs.http.tags]
    service = "homeassistant"

# Pi-hole Monitoring
[[inputs.http]]
  name_override = "pihole"
  urls = ["http://192.168.1.65/admin/api.php?summary"]
  method = "GET"
  timeout = "10s"
  data_format = "json"
  tagexclude = ["url"]
  [inputs.http.tags]
    server = "raspberrypi"
    service = "pihole"

# SSL Certificate Monitoring
[[inputs.x509_cert]]
  sources = [
    "https://ha.martin-ohana.com:443",
    "https://grafana.martin-ohana.com:443",
    "https://portainer.martin-ohana.com:443"
  ]
  timeout = "10s"

# Basic Remote Server Health Check
[[inputs.exec]]
  commands = [
    "ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa_monitoring cliffm@192.168.30.25 'echo \"remote_health,server=tartlet,host=192.168.30.25 status=1\"'"
  ]
  timeout = "30s"
  data_format = "influx"
  interval = "120s"

[[inputs.exec]]
  commands = [
    "ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa_monitoring cliffm@192.168.1.65 'echo \"remote_health,server=raspberrypi,host=192.168.1.65 status=1\"'"
  ]
  timeout = "30s"
  data_format = "influx"
  interval = "120s"

