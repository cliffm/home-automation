# Telegraf Configuration for Home Automation Infrastructure Monitoring

[global_tags]
  environment = "homelab"
  location = "home"
  server = "ha-server2"

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  hostname = "ha-server2"
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                  #
###############################################################################

# InfluxDB v2 Output
[[outputs.influxdb_v2]]
  urls = ["${INFLUXDB_URL}"]
  token = "${INFLUXDB_TOKEN}"
  organization = "${INFLUXDB_ORG}"
  bucket = "${INFLUXDB_BUCKET}"

###############################################################################
#                            INPUT PLUGINS                                   #
###############################################################################

# System CPU Usage
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

# System Memory Usage
[[inputs.mem]]

# System Disk Usage
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Disk I/O Statistics
[[inputs.diskio]]

# System Load Average
[[inputs.system]]
  fielddrop = ["uptime_format"]

# Network Interface Statistics
[[inputs.net]]
  interfaces = ["eth*", "wlan*", "enp*", "ens*"]

# Process Statistics
[[inputs.processes]]

# Docker Container Statistics
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false

# Home Assistant API Health Check
[[inputs.http]]
  name_override = "homeassistant_health"
  urls = ["http://homeassistant:8123/api/"]
  method = "GET"
  headers = {"Authorization" = "Bearer ${HA_TOKEN}", "Content-Type" = "application/json"}
  timeout = "10s"
  data_format = "json"
  json_query = "message"
  tagexclude = ["url"]
  [inputs.http.tags]
    service = "homeassistant"

# Pi-hole Monitoring
[[inputs.http]]
  name_override = "pihole"
  urls = ["http://192.168.1.65/admin/api.php?summary"]
  method = "GET"
  timeout = "10s"
  data_format = "json"
  tagexclude = ["url"]
  [inputs.http.tags]
    server = "raspberrypi"
    service = "pihole"

# Network Connectivity Tests
[[inputs.ping]]
  urls = ["192.168.1.1", "192.168.1.65", "192.168.30.25", "8.8.8.8", "1.1.1.1"]
  count = 3
  ping_timeout = 5.0
  interval = "60s"

# SSL Certificate Monitoring
[[inputs.x509_cert]]
  sources = [
    "https://ha.martin-ohana.com:443",
    "https://grafana.martin-ohana.com:443",
    "https://portainer.martin-ohana.com:443",
    "https://pgadmin.martin-ohana.com:443"
  ]
  timeout = "10s"

# Remote Server Monitoring via SSH (updated for cliffm user)
[[inputs.exec]]
  commands = [
    'ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa_monitoring cliffm@192.168.30.25 "echo \"tartlet_load1,server=tartlet value=$(cut -d\" \" -f1 /proc/loadavg)\"; echo \"tartlet_memory,server=tartlet used_percent=$(free | grep Mem | awk \"{printf \\\"%.1f\\\", \\\$3/\\\$2 * 100.0}\")\"; echo \"tartlet_disk,server=tartlet used_percent=$(df -h / | awk \'NR==2{print \$5}\' | sed \'s/%//\')\"" | grep -v "Warning"',
    'ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa_monitoring cliffm@192.168.1.65 "echo \"raspberrypi_load1,server=raspberrypi value=$(cut -d\" \" -f1 /proc/loadavg)\"; echo \"raspberrypi_memory,server=raspberrypi used_percent=$(free | grep Mem | awk \"{printf \\\"%.1f\\\", \\\$3/\\\$2 * 100.0}\")\"; echo \"raspberrypi_disk,server=raspberrypi used_percent=$(df -h / | awk \'NR==2{print \$5}\' | sed \'s/%//\')\"" | grep -v "Warning"'
  ]
  timeout = "30s"
  data_format = "influx"
  name_override = "remote_servers"
  interval = "60s"

# Internal Service Health Checks (when containers are running)
[[inputs.http]]
  name_override = "service_health"
  urls = [
    "http://portainer:9000/api/status",
    "http://nodered:1880/",
    "http://mqtt:1883/"
  ]
  method = "GET"
  timeout = "5s"
  tagexclude = ["url"]
  interval = "60s"

